"""
compute the CPU time (h) and max RAM (G)
on the log file generated by /usr/bin/time -v
python cal_resource.py <log file>
"""

import re 
import sys

class Com_Res():

    def __init__(self, time_file):
        self.time_file = time_file
    
    def extract_time(self): #log file obtained by /usr/bin/time -v
         #if no time available
        for line in open(self.time_file):
            time_re = re.search('User time \(seconds\):(.*?)$', line)
            if time_re:
                user_time =  time_re.group(1).strip()

            time_sys = re.search('System time \(seconds\):(.*?)$', line)
            if time_sys:
                sys_time = time_sys.group(1).strip()
        # print (user_time, sys_time)
        all_time = float(user_time) + float(sys_time)
        final_time = round(all_time/3600, 2)
        return final_time

    def extract_mem(self):
        used_mem = 0 #if no time available
        for line in open(self.time_file):
            time_re = re.search('Maximum resident set size \(kbytes\):(.*?)$', line)
            if time_re:
                used_mem =  time_re.group(1).strip()
        final_mem = round(float(used_mem)/1000000, 2)
        return final_mem

if __name__ == "__main__":
    time_file = sys.argv[1]
    com = Com_Res(time_file)
    cpu_time = com.extract_time()
    max_PAM = com.extract_mem()
    print ("CPU time: %s h; Maximum RAM: %s G."%(cpu_time, max_PAM))